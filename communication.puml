@startuml Архитектура
package "Worker" {
    [Selenium] <- [Python обёртка]
}

package "HTTP API" {
    [Серв] <-> http
    [Python обёртка] ..> http : Задание выполнено
}

package "PostgreSQL" {
    [Серв] ..> [PSQL] : SQL запросы
    note right of [PSQL]
        Хранение заданий и статусов
    end note
}

package "RabbitMQ" {
    [Python обёртка] <.. RabbitMQ : Задание взято
    note right of [RabbitMQ]
        Очередь заданий и результатов
    end note
}

package "Redis" {
    note right of [Redis]
        Кэширование ячеек очереди заданий, чтоб понимать что не запушили ещё туда
    end note
}

package "Task publisher" {
    [Task-publisher] ..> PSQL : SQL запросы, какие задачи не сделаны
    [Task-publisher] <.. Redis : Проверка, что задачи не запушены
    [Task-publisher] ..> RabbitMQ : Пушит задачи в очередь
    [Task-publisher] ..> Redis : Говорит что запушили
    note right of [Task-publisher]
        Публикует задачи в очередь
    end note
}

package "Configure system" {
    [Configurator] ..> PSQL : SQL запросы
    note left of [Configurator]
        Управление конфигурацией системы, создание пользователей
    end note
}

package "Cli" {
    [cli] ..> http : Управляющие запросы
    note right of [cli]
        Управление пользователем через консоль
    end note
}

package "Frontend" {
    [Front] ..> http : управляющие запросы
    note right of [Front]
        Управление системой через vue.js на фронте
    end note
}
@enduml