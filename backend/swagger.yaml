openapi: 3.0.3
info:
  title: CP Ultimate Money Control API
  description: API для системы контроля задач и воркеров
  version: 1.0.0
  contact:
    name: API Support
servers:
  - url: http://localhost:8080
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
      required:
        - error
        - message

    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password

    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
          description: JWT access токен
      required:
        - access_token

    RefreshResponse:
      type: object
      properties:
        access_token:
          type: string
          description: Новый JWT access токен
      required:
        - access_token

    TaskCreateRequest:
      type: object
      properties:
        type:
          type: string
          description: Тип задачи
        payload:
          type: object
          description: Произвольный JSON payload
      required:
        - type
        - payload

    TaskCreateResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: UUID созданной задачи
      required:
        - uuid

    TaskStatusResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: UUID задачи
        type:
          type: string
          description: Тип задачи
        payload_answer:
          type: object
          description: Ответ от задачи
        payload_input:
          type: object
          description: Входные данные задачи
        logs:
          type: array
          items:
            type: string
          description: Логи выполнения
        status:
          type: string
          description: Статус задачи
        last_update:
          type: integer
          format: int64
          description: Время последнего обновления (Unix timestamp)
      required:
        - uuid
        - type
        - status
        - last_update

    TaskUpdateRequest:
      type: object
      properties:
        result:
          type: object
          description: Результат выполнения задачи (произвольный JSON)
        status:
          type: string
          description: Новый статус задачи
        logs:
          type: array
          items:
            type: string
          description: Логи выполнения задачи
      required:
        - status

    TaskUpdateResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Успешность обновления
        message:
          type: string
          description: Сообщение о результате операции
      required:
        - success

    LogsResponse:
      type: array
      items:
        type: string
      description: Логи выполнения задачи

    # Схема элемента шаблона типа задачи
    TaskTypeTemplateField:
      type: object
      properties:
        field_name:
          type: string
          description: Имя поля шаблона
        field_hint:
          type: string
          description: Подсказка для поля
        field_description:
          type: string
          description: Подробное описание или справка для поля
      required:
        - field_name
      example:
        field_name: "email"
        field_hint: "Email получателя"
        field_description: "Адрес электронной почты, на который будет отправлено уведомление"

    # Запрос на создание типа задачи
    TaskTypeCreateRequest:
      type: object
      properties:
        task_name:
          type: string
          description: Читабельное имя типа задачи
        task_type:
          type: string
          description: Внутренний идентификатор типа задачи
        task_template:
          type: array
          items:
            $ref: '#/components/schemas/TaskTypeTemplateField'
          description: Массив описаний полей шаблона
      required:
        - task_name
        - task_type
        - task_template
      example:
        task_name: "Уведомление по email"
        task_type: "email_notification"
        task_template:
          - field_name: "email"
            field_hint: "Email получателя"
            field_description: "Адрес электронной почты для отправки"
          - field_name: "subject"
            field_hint: "Тема сообщения"
            field_description: "Краткая тема письма"

    # Ответ с информацией о типе задачи
    TaskTypeResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        task_name:
          type: string
        task_type:
          type: string
        task_template:
          type: array
          items:
            $ref: '#/components/schemas/TaskTypeTemplateField'
      required:
        - uuid
        - task_name
        - task_type
      example:
        uuid: "d290f1ee-6c54-4b01-90e6-d701748f0851"
        task_name: "Уведомление по email"
        task_type: "email_notification"
        task_template:
          - field_name: "email"
            field_hint: "Email получателя"
            field_description: "Адрес электронной почты для отправки"
          - field_name: "subject"
            field_hint: "Тема сообщения"
            field_description: "Краткая тема письма"
paths:
  # Группа endpoints: Конфигурационные (требуют JWT)
  /auth/login:
    post:
      tags:
        - Аутентификация
      summary: Вход пользователя
      description: Аутентификация пользователя по логину и паролю
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Успешная аутентификация
          headers:
            Set-Cookie:
              description: HTTP-only cookie с refresh токеном
              schema:
                type: string
                example: refresh_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; HttpOnly; Secure; SameSite=Strict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Неверные данные запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/refresh:
    post:
      tags:
        - Аутентификация
      summary: Обновление токена
      description: Обновляет access токен используя refresh токен из cookie
      responses:
        '200':
          description: Токен успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshResponse'
        '401':
          description: Недействительный refresh токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /task:
    get:
      tags:
        - Задачи
      summary: Получить список задач
      description: Возвращает список всех задач в системе
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Список задач получен успешно
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskStatusResponse'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Задачи
      summary: Добавить задачу
      description: Создает новую задачу в системе
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateRequest'
      responses:
        '200':
          description: Задача успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCreateResponse'
        '400':
          description: Неверные данные запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Недостаточно прав доступа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /task/{uuid}:
    get:
      tags:
        - Задачи
      summary: Получить статус задачи
      description: Возвращает информацию о задаче по её UUID
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          description: UUID задачи
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Информация о задаче получена успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskStatusResponse'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Недостаточно прав доступа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Задача не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /worker/task/{uuid}:
    put:
      tags:
        - Воркер
      summary: Обновить статус задачи
      description: Обновляет статус, результат и логи задачи (используется воркерами)
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          description: UUID задачи
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateRequest'
      responses:
        '200':
          description: Статус задачи успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskUpdateResponse'
        '400':
          description: Неверные данные запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Недостаточно прав доступа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Задача не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /task/{uuid}/logs:
    get:
      tags:
        - Задачи
      summary: Получить логи задачи
      description: Возвращает логи выполнения задачи по её UUID
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          description: UUID задачи
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Логи задачи получены успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsResponse'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Недостаточно прав доступа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Задача не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Эндпоинты для управления типами задач
  /task/type:
    get:
      tags:
        - Типы задач
      summary: Получить список типов задач
      description: Возвращает список всех доступных типов задач
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Список типов задач получен успешно
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskTypeResponse'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Типы задач
      summary: Создать новый тип задачи
      description: Добавляет новый тип задачи в систему
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskTypeCreateRequest'
      responses:
        '201':
          description: Тип задачи успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskTypeResponse'
        '400':
          description: Неверные данные запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Недостаточно прав доступа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /task/type/{uuid}:
    get:
      tags:
        - Типы задач
      summary: Получить информацию о типе задачи
      description: Возвращает информацию о типе задачи по его UUID
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          description: UUID типа задачи
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Информация о типе задачи получена успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskTypeResponse'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Недостаточно прав доступа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Тип задачи не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Типы задач
      summary: Обновить тип задачи
      description: Обновляет информацию о типе задачи
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          description: UUID типа задачи
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskTypeCreateRequest'
      responses:
        '200':
          description: Тип задачи успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskTypeResponse'
        '400':
          description: Неверные данные запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Недостаточно прав доступа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Тип задачи не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Типы задач
      summary: Удалить тип задачи
      description: Удаляет тип задачи из системы
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          required: true
          description: UUID типа задачи
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Тип задачи успешно удален
        '401':
          description: Требуется аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Недостаточно прав доступа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Тип задачи не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

tags:
  - name: Аутентификация
    description: Операции аутентификации и авторизации
  - name: Задачи
    description: Управление задачами
  - name: Воркер
    description: API для воркеров
  - name: Типы задач
    description: Управление типами задач